{"version":3,"sources":["components/PhoneBook/PhoneBook.module.css","components/Form/Form.js","components/PhoneBook/PhoneBook.js","components/Filter/Filter.js","hooks/useLocalStorage.js","components/App.js","index.js","components/Form/Form.module.css","components/box.module.css"],"names":["module","exports","Form","checkingForExistenceOfSuchName","onAdd","useState","name","setName","number","setNumber","handleChangeForm","target","value","resetForm","className","s","form","onSubmit","e","preventDefault","alert","newContact","id","shortid","generate","input","type","onChange","st","myButton","PhoneBookItem","onRemove","onClick","PhoneBook","contacts","length","phoneList","map","contact","Filter","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","setContacts","filter","setFilter","getVisibleContacts","searchName","toLowerCase","includes","console","log","filterContacts","box","data","prevContacts","variableName","handleName","find","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.212a5e12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneList\":\"PhoneBook_phoneList__h6Wz4\"};","import { useState } from 'react';\nimport shortid from 'shortid';\n\nimport s from './Form.module.css';\nimport st from '../box.module.css';\n\n\nfunction Form({ checkingForExistenceOfSuchName, onAdd }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const repeatName = checkingForExistenceOfSuchName(name);\n\n    if (repeatName) {\n      alert(`${name} is alredy in contact`);\n    } else {\n      const newContact = { id: shortid.generate(), name, number };\n      onAdd(newContact);\n    }\n\n    resetForm();\n\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleFormSubmit}>\n      <label className={s.input}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeForm}\n        />\n      </label>\n      <label className={s.input}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeForm}\n        />\n      </label>\n      <button className={st.myButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import s from './PhoneBook.module.css';\nimport propTypes from 'prop-types';\n\nconst PhoneBookItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li>\n      {name}:{number} <button onClick={() => onRemove(id)}>delete</button>\n    </li>\n  );\n};\n\nconst PhoneBook = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.phoneList}>\n      {contacts.map(contact => (\n        <PhoneBookItem {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nPhoneBookItem.propTypes = {\n  id: propTypes.string,\n  name: propTypes.string,\n  number: propTypes.string,\n  onRemove: propTypes.func,\n};\n\nPhoneBook.propTypes = {\n  contacts: propTypes.arrayOf(propTypes.object),\n  onRemove: propTypes.func,\n};\n\nexport default PhoneBook;\n","import s from '../Form/Form.module.css';\nimport propTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.input}>\n      Find contact by name\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};\nexport default Filter;\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState } from 'react';\n\nimport Form from './Form/Form';\nimport PhoneBook from './PhoneBook/PhoneBook';\nimport Filter from './Filter/Filter';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nimport s from './box.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('userContacts', []);\n  const [filter, setFilter] = useState('');\n\n  const checkingForExistenceOfSuchName = variableName => {\n    const handleName = variableName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === handleName);\n  };\n\n  const handleAddContact = data => {\n    setContacts(prevContacts => [...prevContacts, data]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts => [\n      ...prevContacts.filter(({ id }) => id !== contactId),\n    ]);\n  };\n\n  const handleFilterChange = ({ target }) => {\n    const { value } = target;\n    setFilter(value);\n  };\n\n  const getVisibleContacts = () => {\n    const searchName = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(searchName),\n    );\n  };\n\n  console.log(getVisibleContacts());\n\n  const filterContacts = getVisibleContacts();\n\n  return (\n    <div className={s.box}>\n      <h2>Form</h2>\n      <Form\n        onAdd={handleAddContact}\n        checkingForExistenceOfSuchName={checkingForExistenceOfSuchName}\n      />\n      <h2>Book</h2>\n      <Filter value={filter} onChange={handleFilterChange} />\n      <PhoneBook contacts={filterContacts} onRemove={deleteContact} />\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1JoJx\",\"input\":\"Form_input__2J0fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__1-0bs\",\"myButton\":\"box_myButton__1xCjT\"};"],"sourceRoot":""}